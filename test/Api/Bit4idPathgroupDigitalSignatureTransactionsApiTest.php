<?php
/**
 * Bit4idPathgroupDigitalSignatureTransactionsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Signing Today Web
 *
 * *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.2.3
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * Bit4idPathgroupDigitalSignatureTransactionsApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class Bit4idPathgroupDigitalSignatureTransactionsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for dSTIdAuditGet
     *
     * Retrieve the audit records associated to the DST.
     *
     */
    public function testDSTIdAuditGet()
    {
    }

    /**
     * Test case for dSTIdDelete
     *
     * Delete a DST.
     *
     */
    public function testDSTIdDelete()
    {
    }

    /**
     * Test case for dSTIdFillPatch
     *
     * Fill a form of a DST.
     *
     */
    public function testDSTIdFillPatch()
    {
    }

    /**
     * Test case for dSTIdGet
     *
     * Retrieve a DST.
     *
     */
    public function testDSTIdGet()
    {
    }

    /**
     * Test case for dSTIdInstantiatePost
     *
     * Instantiate a DST from a template.
     *
     */
    public function testDSTIdInstantiatePost()
    {
    }

    /**
     * Test case for dSTIdModifyPost
     *
     * Modify a published DST template.
     *
     */
    public function testDSTIdModifyPost()
    {
    }

    /**
     * Test case for dSTIdNotifyPost
     *
     * Send notifications for a DST.
     *
     */
    public function testDSTIdNotifyPost()
    {
    }

    /**
     * Test case for dSTIdPublishPost
     *
     * Publish a DST.
     *
     */
    public function testDSTIdPublishPost()
    {
    }

    /**
     * Test case for dSTIdPut
     *
     * Update a DST.
     *
     */
    public function testDSTIdPut()
    {
    }

    /**
     * Test case for dSTIdReplacePost
     *
     * Replace a rejected DST.
     *
     */
    public function testDSTIdReplacePost()
    {
    }

    /**
     * Test case for dSTIdSignDocIdSignIdGet
     *
     * Return the address for signing.
     *
     */
    public function testDSTIdSignDocIdSignIdGet()
    {
    }

    /**
     * Test case for dSTIdTemplatizePost
     *
     * Create a template from a DST.
     *
     */
    public function testDSTIdTemplatizePost()
    {
    }

    /**
     * Test case for dSTsGet
     *
     * Retrieve DSTs.
     *
     */
    public function testDSTsGet()
    {
    }

    /**
     * Test case for dSTsPost
     *
     * Create a new DST.
     *
     */
    public function testDSTsPost()
    {
    }
}
