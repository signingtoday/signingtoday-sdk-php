<?php
/**
 * BackofficeApiTest
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Signing Today Web
 *
 * *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.2.3
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * BackofficeApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class BackofficeApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for organizationIdAlfrescoSyncGet
     *
     * Sync all completed DSTs on Alfresco.
     *
     */
    public function testOrganizationIdAlfrescoSyncGet()
    {
    }

    /**
     * Test case for organizationIdAlfrescoSyncPost
     *
     * Sync all completed DSTs on Alfresco.
     *
     */
    public function testOrganizationIdAlfrescoSyncPost()
    {
    }

    /**
     * Test case for organizationIdDelete
     *
     * Enable or disable an Organization account..
     *
     */
    public function testOrganizationIdDelete()
    {
    }

    /**
     * Test case for organizationIdGet
     *
     * Retrieve info on one organization.
     *
     */
    public function testOrganizationIdGet()
    {
    }

    /**
     * Test case for organizationIdPublicGet
     *
     * Retrieve public resources.
     *
     */
    public function testOrganizationIdPublicGet()
    {
    }

    /**
     * Test case for organizationIdPut
     *
     * Update info on one organization.
     *
     */
    public function testOrganizationIdPut()
    {
    }

    /**
     * Test case for organizationIdResourceGet
     *
     * Get an organization resource.
     *
     */
    public function testOrganizationIdResourceGet()
    {
    }

    /**
     * Test case for organizationIdResourcePut
     *
     * Create or overwrite an organization resource.
     *
     */
    public function testOrganizationIdResourcePut()
    {
    }

    /**
     * Test case for organizationResourceIdDelete
     *
     * Delete an organization resource.
     *
     */
    public function testOrganizationResourceIdDelete()
    {
    }

    /**
     * Test case for organizationResourcesGet
     *
     * List all the organization resources.
     *
     */
    public function testOrganizationResourcesGet()
    {
    }

    /**
     * Test case for organizationTagsGet
     *
     * Retrieve organization tags.
     *
     */
    public function testOrganizationTagsGet()
    {
    }

    /**
     * Test case for organizationsGet
     *
     * Get the list of organizations.
     *
     */
    public function testOrganizationsGet()
    {
    }

    /**
     * Test case for organizationsPost
     *
     * Create a new organization.
     *
     */
    public function testOrganizationsPost()
    {
    }
}
